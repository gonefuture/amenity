<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.zhku.amenity.po.mapper.ProofMapper" >
  <resultMap id="BaseResultMap" type="cn.zhku.amenity.po.entity.Proof" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="yb_realname" property="ybRealname" jdbcType="VARCHAR" />
    <result column="yb_shoolname" property="ybShoolname" jdbcType="VARCHAR" />
    <result column="yb_collegename" property="ybCollegename" jdbcType="VARCHAR" />
    <result column="yb_classname" property="ybClassname" jdbcType="VARCHAR" />
    <result column="yb_enteryear" property="ybEnteryear" jdbcType="VARCHAR" />
    <result column="yb_employid" property="ybEmployid" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="pic" property="pic" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, yb_realname, yb_shoolname, yb_collegename, yb_classname, yb_enteryear, yb_employid, 
    address, state, pic
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.zhku.amenity.po.entity.ProofExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from proof
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from proof
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from proof
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.zhku.amenity.po.entity.ProofExample" >
    delete from proof
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.zhku.amenity.po.entity.Proof" >
    insert into proof (id, yb_realname, yb_shoolname, 
      yb_collegename, yb_classname, yb_enteryear, 
      yb_employid, address, state, 
      pic)
    values (#{id,jdbcType=INTEGER}, #{ybRealname,jdbcType=VARCHAR}, #{ybShoolname,jdbcType=VARCHAR}, 
      #{ybCollegename,jdbcType=VARCHAR}, #{ybClassname,jdbcType=VARCHAR}, #{ybEnteryear,jdbcType=VARCHAR}, 
      #{ybEmployid,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{pic,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.zhku.amenity.po.entity.Proof" >
    insert into proof
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="ybRealname != null" >
        yb_realname,
      </if>
      <if test="ybShoolname != null" >
        yb_shoolname,
      </if>
      <if test="ybCollegename != null" >
        yb_collegename,
      </if>
      <if test="ybClassname != null" >
        yb_classname,
      </if>
      <if test="ybEnteryear != null" >
        yb_enteryear,
      </if>
      <if test="ybEmployid != null" >
        yb_employid,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="pic != null" >
        pic,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ybRealname != null" >
        #{ybRealname,jdbcType=VARCHAR},
      </if>
      <if test="ybShoolname != null" >
        #{ybShoolname,jdbcType=VARCHAR},
      </if>
      <if test="ybCollegename != null" >
        #{ybCollegename,jdbcType=VARCHAR},
      </if>
      <if test="ybClassname != null" >
        #{ybClassname,jdbcType=VARCHAR},
      </if>
      <if test="ybEnteryear != null" >
        #{ybEnteryear,jdbcType=VARCHAR},
      </if>
      <if test="ybEmployid != null" >
        #{ybEmployid,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="pic != null" >
        #{pic,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.zhku.amenity.po.entity.ProofExample" resultType="java.lang.Integer" >
    select count(*) from proof
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update proof
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.ybRealname != null" >
        yb_realname = #{record.ybRealname,jdbcType=VARCHAR},
      </if>
      <if test="record.ybShoolname != null" >
        yb_shoolname = #{record.ybShoolname,jdbcType=VARCHAR},
      </if>
      <if test="record.ybCollegename != null" >
        yb_collegename = #{record.ybCollegename,jdbcType=VARCHAR},
      </if>
      <if test="record.ybClassname != null" >
        yb_classname = #{record.ybClassname,jdbcType=VARCHAR},
      </if>
      <if test="record.ybEnteryear != null" >
        yb_enteryear = #{record.ybEnteryear,jdbcType=VARCHAR},
      </if>
      <if test="record.ybEmployid != null" >
        yb_employid = #{record.ybEmployid,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.pic != null" >
        pic = #{record.pic,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update proof
    set id = #{record.id,jdbcType=INTEGER},
      yb_realname = #{record.ybRealname,jdbcType=VARCHAR},
      yb_shoolname = #{record.ybShoolname,jdbcType=VARCHAR},
      yb_collegename = #{record.ybCollegename,jdbcType=VARCHAR},
      yb_classname = #{record.ybClassname,jdbcType=VARCHAR},
      yb_enteryear = #{record.ybEnteryear,jdbcType=VARCHAR},
      yb_employid = #{record.ybEmployid,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      pic = #{record.pic,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.zhku.amenity.po.entity.Proof" >
    update proof
    <set >
      <if test="ybRealname != null" >
        yb_realname = #{ybRealname,jdbcType=VARCHAR},
      </if>
      <if test="ybShoolname != null" >
        yb_shoolname = #{ybShoolname,jdbcType=VARCHAR},
      </if>
      <if test="ybCollegename != null" >
        yb_collegename = #{ybCollegename,jdbcType=VARCHAR},
      </if>
      <if test="ybClassname != null" >
        yb_classname = #{ybClassname,jdbcType=VARCHAR},
      </if>
      <if test="ybEnteryear != null" >
        yb_enteryear = #{ybEnteryear,jdbcType=VARCHAR},
      </if>
      <if test="ybEmployid != null" >
        yb_employid = #{ybEmployid,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="pic != null" >
        pic = #{pic,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.zhku.amenity.po.entity.Proof" >
    update proof
    set yb_realname = #{ybRealname,jdbcType=VARCHAR},
      yb_shoolname = #{ybShoolname,jdbcType=VARCHAR},
      yb_collegename = #{ybCollegename,jdbcType=VARCHAR},
      yb_classname = #{ybClassname,jdbcType=VARCHAR},
      yb_enteryear = #{ybEnteryear,jdbcType=VARCHAR},
      yb_employid = #{ybEmployid,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      pic = #{pic,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>